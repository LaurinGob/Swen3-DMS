version: "3.9"

services:
  documentloader.api:
    image: ${DOCKER_REGISTRY-}documentloaderapi
    build:
      context: .
      dockerfile: DocumentLoader.API/Dockerfile
    expose:
      - "80"
    depends_on:
      - db
      - rabbitmq
    environment:
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__User=guest
      - RabbitMQ__Password=guest

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
      LANG: en_US.utf8
      LC_ALL: en_US.utf8
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:4.1-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
        test: ["CMD", "rabbitmq-diagnostics", "-q", "status"]
        interval: 30s
        timeout: 10s
        retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  ui:
    image: nginx:latest
    volumes:
      - ./DocumentLoader.WebUI:/usr/share/nginx/html:ro
      - ./DocumentLoader.WebUI/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - documentloader.api

volumes:
  rabbitmq_data:
