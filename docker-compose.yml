version: "3.9"

services:
  documentloader.api:
    image: ${DOCKER_REGISTRY-}documentloaderapi
    build:
      context: .
      dockerfile: DocumentLoader.API/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
    ports:
      - "5000:5000"
      - "5001:5001"
    expose:
      - "5000"
      - "5001"
    depends_on:
      - db
    networks:
      - appnet

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
      LANG: en_US.utf8
      LC_ALL: en_US.utf8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - appnet

  rabbitmq:
      image: rabbitmq:3.12-management
      container_name: rabbitmq
      ports:
        - "5672:5672"
        - "15672:15672"
      environment:
        RABBITMQ_DEFAULT_USER: myuser
        RABBITMQ_DEFAULT_PASS: mypassword
      healthcheck:
          test: ["CMD", "rabbitmq-diagnostics", "-q", "status"]
          interval: 30s
          timeout: 10s
          retries: 5
      volumes:
        - rabbitmq_data:/var/lib/rabbitmq

  ocrworker:
      build:
        context: ./DocumentLoader.OCRWorker
        dockerfile: Dockerfile
      depends_on:
        - rabbitmq
      environment:
        - RabbitMQ__Host=rabbitmq
        - RabbitMQ__User=myuser
        - RabbitMQ__Password=mypassword
      networks:
        - appnet

  ui:
    image: nginx:latest
    volumes:
      - ./DocumentLoader.WebUI:/usr/share/nginx/html:ro
      - ./DocumentLoader.WebUI/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - documentloader.api
    networks:
      - appnet

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  appnet:
    driver: bridge
